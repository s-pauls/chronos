// <auto-generated />
using System;
using Chronos.Data.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chronos.Data.EntityFramework.Migrations
{
    [DbContext(typeof(ChronosDbContext))]
    [Migration("20210412125223_Estimate")]
    partial class Estimate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.AuditLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("UserId");

                    b.HasIndex("ObjectId", "ObjectType");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstimateTemplateId")
                        .HasColumnType("int");

                    b.Property<double>("GrandTotal")
                        .HasColumnType("float");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstimateTemplateId");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstimateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstimateId");

                    b.ToTable("EstimateItems");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateItemTaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Discipline")
                        .HasColumnType("int");

                    b.Property<int>("EstimateItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EstimateItemId");

                    b.HasIndex("Name", "Discipline", "EstimateItemId")
                        .IsUnique();

                    b.ToTable("EstimateItemTasks");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateTemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstimateTemplates");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.FeatureRulesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rules")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeatureRules");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CSIEstimateETA")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DesiredReleaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("NumberPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkypeGroupUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WEXEstimateETA")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("RequestOfWork");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.FddEntity", b =>
                {
                    b.HasBaseType("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity");

                    b.ToTable("RequestOfWork_FDD");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.FrEntity", b =>
                {
                    b.HasBaseType("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity");

                    b.Property<bool>("IsPartner")
                        .HasColumnType("bit");

                    b.Property<string>("WexTeam")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("RequestOfWork_FR");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.SowEntity", b =>
                {
                    b.HasBaseType("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity");

                    b.Property<string>("PartnerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("RequestOfWork_SOW");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateEntity", b =>
                {
                    b.HasOne("Chronos.Data.EntityFramework.Entities.EstimateTemplateEntity", "EstimateTemplate")
                        .WithMany()
                        .HasForeignKey("EstimateTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstimateTemplate");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateItemEntity", b =>
                {
                    b.HasOne("Chronos.Data.EntityFramework.Entities.EstimateEntity", "Estimate")
                        .WithMany()
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.EstimateItemTaskEntity", b =>
                {
                    b.HasOne("Chronos.Data.EntityFramework.Entities.EstimateItemEntity", "EstimateItem")
                        .WithMany()
                        .HasForeignKey("EstimateItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstimateItem");
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.FddEntity", b =>
                {
                    b.HasOne("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity", null)
                        .WithOne()
                        .HasForeignKey("Chronos.Data.EntityFramework.Entities.FddEntity", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.FrEntity", b =>
                {
                    b.HasOne("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity", null)
                        .WithOne()
                        .HasForeignKey("Chronos.Data.EntityFramework.Entities.FrEntity", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chronos.Data.EntityFramework.Entities.SowEntity", b =>
                {
                    b.HasOne("Chronos.Data.EntityFramework.Entities.RequestOfWorkEntity", null)
                        .WithOne()
                        .HasForeignKey("Chronos.Data.EntityFramework.Entities.SowEntity", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
